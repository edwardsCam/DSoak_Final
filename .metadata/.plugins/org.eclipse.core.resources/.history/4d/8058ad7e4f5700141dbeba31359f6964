package MessageTester;

import static org.junit.Assert.*;

import org.junit.Test;

import Messages.AliveQuery;
import Messages.Message;
import SharedObject.MessageNumber;

public class AliveQueryTester {

	@Test
	public void test_EveryThing() throws ClassNotFoundException 
	{
		MessageNumber.LocalProcessId = 100;
		
		AliveQuery msg1 = new AliveQuery();
		assertNotNull(msg1.MessageNr);
		assertEquals(100, msg1.MessageNr.ProcessId);
		assertTrue(msg1.MessageNr.SeqNumber > 0);
		assertEquals(msg1.MessageNr, msg1.ConvId);
		
		AliveQuery msg2 = new AliveQuery();
		msg2.ConvId = msg1.ConvId;
		assertNotNull(msg2.MessageNr);
		assertEquals(100, msg2.MessageNr.ProcessId);
		assertEquals(msg1.MessageNr.SeqNumber + 1, msg2.MessageNr.SeqNumber);
		assertEquals(msg1.ConvId, msg2.ConvId);
		
		byte[] bytes = msg2.Encode();
		
		Message msg3 = Message.Decode(bytes);
		
		assertTrue(msg3 instanceof AliveQuery);
		
		AliveQuery msg4 = (AliveQuery) msg3;
		assertEquals(msg4.MessageNr, msg3.MessageNr);
		assertEquals(msg2.ConvId.ProcessId, msg4.ConvId.ProcessId);
		assertEquals(msg2.ConvId.SeqNumber, msg4.ConvId.SeqNumber);
		
		
		
	}

}
