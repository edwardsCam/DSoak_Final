package MessageTester;

import static org.junit.Assert.*;

import org.junit.Test;

import Messages.BalloonStolen;
import SharedObject.Balloon;
import SharedObject.MessageNumber;

public class BalloonStolenTester
{
	@Test
	public void test_Everything() 
	{
		MessageNumber.LocalProcessId = 100;
		
		BalloonStolen msg1 = new BalloonStolen();
		assertNotNull(msg1.MessageNr);
		assertEquals(100, msg1.MessageNr.ProcessId);
		assertTrue(msg1.MessageNr.SeqNumber > 0);
		assertEquals(msg1.MessageNr, msg1.ConvId);
		assertEquals(0, msg1.GameId);
		assertEquals(0, msg1.TargetProcessId);
		assertEquals(0, msg1.ThiefId);
		assertNull(msg1.StolenBalloon);
		
		Balloon b = new Balloon();
           BalloonStolen msg2 = new BalloonStolen() { GameId = 11, TargetProcessId = 12, ThiefId = 13, StolenBalloon = b };
           Assert.IsNotNull(msg2.MessageNr);
           Assert.AreEqual(100, msg2.MessageNr.ProcessId);
           Assert.AreEqual(msg1.MessageNr.SeqNumber + 1, msg2.MessageNr.SeqNumber);
           Assert.AreEqual(msg2.MessageNr, msg2.ConvId);
           Assert.AreEqual(11, msg2.GameId);
           Assert.AreEqual(12, msg2.TargetProcessId);
           Assert.AreEqual(13, msg2.ThiefId);
           Assert.AreSame(b, msg2.StolenBalloon);

           byte[] bytes = msg2.Encode();
           string tmp = Encoding.ASCII.GetString(bytes);

           Message msg3 = Message.Decode(bytes);
           Assert.IsTrue(msg3 is BalloonStolen);
           BalloonStolen msg4 = msg3 as BalloonStolen;
           Assert.AreEqual(msg2.MessageNr, msg4.MessageNr);
           Assert.AreEqual(msg2.ConvId, msg4.ConvId);
           Assert.AreEqual(msg2.GameId, msg4.GameId);
           Assert.AreEqual(msg2.TargetProcessId, msg4.TargetProcessId);
           Assert.AreEqual(msg2.ThiefId, msg4.ThiefId);
           Assert.AreEqual(b.Id, msg4.StolenBalloon.Id);
	}	

}
