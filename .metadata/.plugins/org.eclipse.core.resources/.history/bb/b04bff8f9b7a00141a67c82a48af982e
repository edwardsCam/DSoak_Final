package Messages;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStreamWriter;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import SharedObject.MessageNumber;

public class Message implements Serializable
{
	private static final long serialVersionUID = 2731655107048353376L;
	
	private byte[] bytes = null;
	public MessageNumber MessageNr;
	public MessageNumber ConvId;
	
	public Message() 
	{
		MessageNr = MessageNumber.Create();
		ConvId = MessageNr;
	}
	
	public byte[] Encode()
	{
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		OutputStreamWriter writer = new OutputStreamWriter(bos, "US-ASCII");
		Gson g = new GsonBuilder().create();
		String type = this.getClass().getSimpleName() + ":"; // get class name
		byte[] b = type.getBytes("US-ASCII");
		writer.write(type);
		
		g.toJson(this, writer);
	
		writer.flush();
		writer.close();
		return bos.toByteArray();
		
	}
	
	public static Message Decode(byte[] bytes) throws ClassNotFoundException
    {
		Message msg = null;
		ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
		ObjectInput in = null;
		try
		{
			in = new ObjectInputStream(bis);
			Object obj = in.readObject(); // read message type ended with : as an Object
			String type = (String) obj;   // cast obj to string
			msg = (Message) in.readObject(); // read the message class
		}
		catch (IOException e) {}
		
		return msg;
    }
	public static void main(String[] args) throws IOException 
	{
		Message msg = new Message();
		MessageNumber.LocalProcessId = 100;
		
		byte[] byt = msg.Encode();
	}
}