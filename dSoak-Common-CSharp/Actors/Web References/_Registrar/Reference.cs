//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Actors._Registrar {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IRegistrar", Namespace="http://tempuri.org/")]
    public partial class Registrar : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetProcessIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AmAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGameManagersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlayersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGameInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GameAmAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndPointReflectorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Registrar() {
            this.Url = global::Actors.Properties.Settings.Default.Actors__Registrar_Registrar;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetProcessIdCompletedEventHandler GetProcessIdCompleted;
        
        /// <remarks/>
        public event AmAliveCompletedEventHandler AmAliveCompleted;
        
        /// <remarks/>
        public event GetGameManagersCompletedEventHandler GetGameManagersCompleted;
        
        /// <remarks/>
        public event GetPlayersCompletedEventHandler GetPlayersCompleted;
        
        /// <remarks/>
        public event GetProcessInfoCompletedEventHandler GetProcessInfoCompleted;
        
        /// <remarks/>
        public event RegisterGameCompletedEventHandler RegisterGameCompleted;
        
        /// <remarks/>
        public event GetAllGamesCompletedEventHandler GetAllGamesCompleted;
        
        /// <remarks/>
        public event GetGamesCompletedEventHandler GetGamesCompleted;
        
        /// <remarks/>
        public event GetGameInfoCompletedEventHandler GetGameInfoCompleted;
        
        /// <remarks/>
        public event GameAmAliveCompletedEventHandler GameAmAliveCompleted;
        
        /// <remarks/>
        public event ChangeStatusCompletedEventHandler ChangeStatusCompleted;
        
        /// <remarks/>
        public event EndPointReflectorCompletedEventHandler EndPointReflectorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/GetProcessId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetProcessId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] PublicEndPoint ep, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string label, RegistryEntryProcessType processType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool processTypeSpecified, out short GetProcessIdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetProcessIdResultSpecified) {
            object[] results = this.Invoke("GetProcessId", new object[] {
                        ep,
                        label,
                        processType,
                        processTypeSpecified});
            GetProcessIdResult = ((short)(results[0]));
            GetProcessIdResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetProcessIdAsync(PublicEndPoint ep, string label, RegistryEntryProcessType processType, bool processTypeSpecified) {
            this.GetProcessIdAsync(ep, label, processType, processTypeSpecified, null);
        }
        
        /// <remarks/>
        public void GetProcessIdAsync(PublicEndPoint ep, string label, RegistryEntryProcessType processType, bool processTypeSpecified, object userState) {
            if ((this.GetProcessIdOperationCompleted == null)) {
                this.GetProcessIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessIdOperationCompleted);
            }
            this.InvokeAsync("GetProcessId", new object[] {
                        ep,
                        label,
                        processType,
                        processTypeSpecified}, this.GetProcessIdOperationCompleted, userState);
        }
        
        private void OnGetProcessIdOperationCompleted(object arg) {
            if ((this.GetProcessIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessIdCompleted(this, new GetProcessIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/AmAlive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AmAlive(int processId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool processIdSpecified) {
            this.Invoke("AmAlive", new object[] {
                        processId,
                        processIdSpecified});
        }
        
        /// <remarks/>
        public void AmAliveAsync(int processId, bool processIdSpecified) {
            this.AmAliveAsync(processId, processIdSpecified, null);
        }
        
        /// <remarks/>
        public void AmAliveAsync(int processId, bool processIdSpecified, object userState) {
            if ((this.AmAliveOperationCompleted == null)) {
                this.AmAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAmAliveOperationCompleted);
            }
            this.InvokeAsync("AmAlive", new object[] {
                        processId,
                        processIdSpecified}, this.AmAliveOperationCompleted, userState);
        }
        
        private void OnAmAliveOperationCompleted(object arg) {
            if ((this.AmAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AmAliveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/GetGameManagers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SharedObjects")]
        public RegistryEntry[] GetGameManagers() {
            object[] results = this.Invoke("GetGameManagers", new object[0]);
            return ((RegistryEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGameManagersAsync() {
            this.GetGameManagersAsync(null);
        }
        
        /// <remarks/>
        public void GetGameManagersAsync(object userState) {
            if ((this.GetGameManagersOperationCompleted == null)) {
                this.GetGameManagersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameManagersOperationCompleted);
            }
            this.InvokeAsync("GetGameManagers", new object[0], this.GetGameManagersOperationCompleted, userState);
        }
        
        private void OnGetGameManagersOperationCompleted(object arg) {
            if ((this.GetGameManagersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameManagersCompleted(this, new GetGameManagersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/GetPlayers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SharedObjects")]
        public RegistryEntry[] GetPlayers() {
            object[] results = this.Invoke("GetPlayers", new object[0]);
            return ((RegistryEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlayersAsync() {
            this.GetPlayersAsync(null);
        }
        
        /// <remarks/>
        public void GetPlayersAsync(object userState) {
            if ((this.GetPlayersOperationCompleted == null)) {
                this.GetPlayersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlayersOperationCompleted);
            }
            this.InvokeAsync("GetPlayers", new object[0], this.GetPlayersOperationCompleted, userState);
        }
        
        private void OnGetPlayersOperationCompleted(object arg) {
            if ((this.GetPlayersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlayersCompleted(this, new GetPlayersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/GetProcessInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RegistryEntry GetProcessInfo(short processId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool processIdSpecified) {
            object[] results = this.Invoke("GetProcessInfo", new object[] {
                        processId,
                        processIdSpecified});
            return ((RegistryEntry)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessInfoAsync(short processId, bool processIdSpecified) {
            this.GetProcessInfoAsync(processId, processIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetProcessInfoAsync(short processId, bool processIdSpecified, object userState) {
            if ((this.GetProcessInfoOperationCompleted == null)) {
                this.GetProcessInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessInfoOperationCompleted);
            }
            this.InvokeAsync("GetProcessInfo", new object[] {
                        processId,
                        processIdSpecified}, this.GetProcessInfoOperationCompleted, userState);
        }
        
        private void OnGetProcessInfoOperationCompleted(object arg) {
            if ((this.GetProcessInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessInfoCompleted(this, new GetProcessInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/RegisterGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GameInfo RegisterGame(int gameManagerId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool gameManagerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string label, int maxPlayers, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxPlayersSpecified, int maxThieves, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxThievesSpecified) {
            object[] results = this.Invoke("RegisterGame", new object[] {
                        gameManagerId,
                        gameManagerIdSpecified,
                        label,
                        maxPlayers,
                        maxPlayersSpecified,
                        maxThieves,
                        maxThievesSpecified});
            return ((GameInfo)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterGameAsync(int gameManagerId, bool gameManagerIdSpecified, string label, int maxPlayers, bool maxPlayersSpecified, int maxThieves, bool maxThievesSpecified) {
            this.RegisterGameAsync(gameManagerId, gameManagerIdSpecified, label, maxPlayers, maxPlayersSpecified, maxThieves, maxThievesSpecified, null);
        }
        
        /// <remarks/>
        public void RegisterGameAsync(int gameManagerId, bool gameManagerIdSpecified, string label, int maxPlayers, bool maxPlayersSpecified, int maxThieves, bool maxThievesSpecified, object userState) {
            if ((this.RegisterGameOperationCompleted == null)) {
                this.RegisterGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterGameOperationCompleted);
            }
            this.InvokeAsync("RegisterGame", new object[] {
                        gameManagerId,
                        gameManagerIdSpecified,
                        label,
                        maxPlayers,
                        maxPlayersSpecified,
                        maxThieves,
                        maxThievesSpecified}, this.RegisterGameOperationCompleted, userState);
        }
        
        private void OnRegisterGameOperationCompleted(object arg) {
            if ((this.RegisterGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterGameCompleted(this, new RegisterGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/GetAllGames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SharedObjects")]
        public GameInfo[] GetAllGames() {
            object[] results = this.Invoke("GetAllGames", new object[0]);
            return ((GameInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGamesAsync() {
            this.GetAllGamesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllGamesAsync(object userState) {
            if ((this.GetAllGamesOperationCompleted == null)) {
                this.GetAllGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGamesOperationCompleted);
            }
            this.InvokeAsync("GetAllGames", new object[0], this.GetAllGamesOperationCompleted, userState);
        }
        
        private void OnGetAllGamesOperationCompleted(object arg) {
            if ((this.GetAllGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGamesCompleted(this, new GetAllGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/GetGames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SharedObjects")]
        public GameInfo[] GetGames(GameInfoStatusCode status, [System.Xml.Serialization.XmlIgnoreAttribute()] bool statusSpecified) {
            object[] results = this.Invoke("GetGames", new object[] {
                        status,
                        statusSpecified});
            return ((GameInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGamesAsync(GameInfoStatusCode status, bool statusSpecified) {
            this.GetGamesAsync(status, statusSpecified, null);
        }
        
        /// <remarks/>
        public void GetGamesAsync(GameInfoStatusCode status, bool statusSpecified, object userState) {
            if ((this.GetGamesOperationCompleted == null)) {
                this.GetGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGamesOperationCompleted);
            }
            this.InvokeAsync("GetGames", new object[] {
                        status,
                        statusSpecified}, this.GetGamesOperationCompleted, userState);
        }
        
        private void OnGetGamesOperationCompleted(object arg) {
            if ((this.GetGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGamesCompleted(this, new GetGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/GetGameInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GameInfo GetGameInfo(int gameId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool gameIdSpecified) {
            object[] results = this.Invoke("GetGameInfo", new object[] {
                        gameId,
                        gameIdSpecified});
            return ((GameInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetGameInfoAsync(int gameId, bool gameIdSpecified) {
            this.GetGameInfoAsync(gameId, gameIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetGameInfoAsync(int gameId, bool gameIdSpecified, object userState) {
            if ((this.GetGameInfoOperationCompleted == null)) {
                this.GetGameInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameInfoOperationCompleted);
            }
            this.InvokeAsync("GetGameInfo", new object[] {
                        gameId,
                        gameIdSpecified}, this.GetGameInfoOperationCompleted, userState);
        }
        
        private void OnGetGameInfoOperationCompleted(object arg) {
            if ((this.GetGameInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameInfoCompleted(this, new GetGameInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/GameAmAlive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GameAmAlive(int gameId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool gameIdSpecified) {
            this.Invoke("GameAmAlive", new object[] {
                        gameId,
                        gameIdSpecified});
        }
        
        /// <remarks/>
        public void GameAmAliveAsync(int gameId, bool gameIdSpecified) {
            this.GameAmAliveAsync(gameId, gameIdSpecified, null);
        }
        
        /// <remarks/>
        public void GameAmAliveAsync(int gameId, bool gameIdSpecified, object userState) {
            if ((this.GameAmAliveOperationCompleted == null)) {
                this.GameAmAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGameAmAliveOperationCompleted);
            }
            this.InvokeAsync("GameAmAlive", new object[] {
                        gameId,
                        gameIdSpecified}, this.GameAmAliveOperationCompleted, userState);
        }
        
        private void OnGameAmAliveOperationCompleted(object arg) {
            if ((this.GameAmAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GameAmAliveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/ChangeStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeStatus(int gameId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool gameIdSpecified, GameInfoStatusCode status, [System.Xml.Serialization.XmlIgnoreAttribute()] bool statusSpecified) {
            this.Invoke("ChangeStatus", new object[] {
                        gameId,
                        gameIdSpecified,
                        status,
                        statusSpecified});
        }
        
        /// <remarks/>
        public void ChangeStatusAsync(int gameId, bool gameIdSpecified, GameInfoStatusCode status, bool statusSpecified) {
            this.ChangeStatusAsync(gameId, gameIdSpecified, status, statusSpecified, null);
        }
        
        /// <remarks/>
        public void ChangeStatusAsync(int gameId, bool gameIdSpecified, GameInfoStatusCode status, bool statusSpecified, object userState) {
            if ((this.ChangeStatusOperationCompleted == null)) {
                this.ChangeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeStatusOperationCompleted);
            }
            this.InvokeAsync("ChangeStatus", new object[] {
                        gameId,
                        gameIdSpecified,
                        status,
                        statusSpecified}, this.ChangeStatusOperationCompleted, userState);
        }
        
        private void OnChangeStatusOperationCompleted(object arg) {
            if ((this.ChangeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRegistrar/EndPointReflector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EndPointReflector() {
            object[] results = this.Invoke("EndPointReflector", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndPointReflectorAsync() {
            this.EndPointReflectorAsync(null);
        }
        
        /// <remarks/>
        public void EndPointReflectorAsync(object userState) {
            if ((this.EndPointReflectorOperationCompleted == null)) {
                this.EndPointReflectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndPointReflectorOperationCompleted);
            }
            this.InvokeAsync("EndPointReflector", new object[0], this.EndPointReflectorOperationCompleted, userState);
        }
        
        private void OnEndPointReflectorOperationCompleted(object arg) {
            if ((this.EndPointReflectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndPointReflectorCompleted(this, new EndPointReflectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SharedObjects")]
    public partial class PublicEndPoint {
        
        private string hostAndPortField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HostAndPort {
            get {
                return this.hostAndPortField;
            }
            set {
                this.hostAndPortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SharedObjects")]
    public partial class GameInfo {
        
        private PublicEndPoint fightManagerEPField;
        
        private short fightManagerIdField;
        
        private bool fightManagerIdFieldSpecified;
        
        private short gameIdField;
        
        private bool gameIdFieldSpecified;
        
        private string labelField;
        
        private short maxPlayersField;
        
        private bool maxPlayersFieldSpecified;
        
        private short maxThievesField;
        
        private bool maxThievesFieldSpecified;
        
        private GameInfoStatusCode statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PublicEndPoint FightManagerEP {
            get {
                return this.fightManagerEPField;
            }
            set {
                this.fightManagerEPField = value;
            }
        }
        
        /// <remarks/>
        public short FightManagerId {
            get {
                return this.fightManagerIdField;
            }
            set {
                this.fightManagerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FightManagerIdSpecified {
            get {
                return this.fightManagerIdFieldSpecified;
            }
            set {
                this.fightManagerIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public short GameId {
            get {
                return this.gameIdField;
            }
            set {
                this.gameIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GameIdSpecified {
            get {
                return this.gameIdFieldSpecified;
            }
            set {
                this.gameIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public short MaxPlayers {
            get {
                return this.maxPlayersField;
            }
            set {
                this.maxPlayersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxPlayersSpecified {
            get {
                return this.maxPlayersFieldSpecified;
            }
            set {
                this.maxPlayersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public short MaxThieves {
            get {
                return this.maxThievesField;
            }
            set {
                this.maxThievesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxThievesSpecified {
            get {
                return this.maxThievesFieldSpecified;
            }
            set {
                this.maxThievesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public GameInfoStatusCode Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="GameInfo.StatusCode", Namespace="http://schemas.datacontract.org/2004/07/SharedObjects")]
    public enum GameInfoStatusCode {
        
        /// <remarks/>
        NotInitialized,
        
        /// <remarks/>
        Available,
        
        /// <remarks/>
        InProgress,
        
        /// <remarks/>
        Complete,
        
        /// <remarks/>
        Cancelled,
        
        /// <remarks/>
        Ending,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SharedObjects")]
    public partial class RegistryEntry {
        
        private System.DateTime aliveTimestampField;
        
        private bool aliveTimestampFieldSpecified;
        
        private PublicEndPoint epField;
        
        private string labelField;
        
        private short processIdField;
        
        private bool processIdFieldSpecified;
        
        private RegistryEntryProcessType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        public System.DateTime AliveTimestamp {
            get {
                return this.aliveTimestampField;
            }
            set {
                this.aliveTimestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AliveTimestampSpecified {
            get {
                return this.aliveTimestampFieldSpecified;
            }
            set {
                this.aliveTimestampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PublicEndPoint Ep {
            get {
                return this.epField;
            }
            set {
                this.epField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public short ProcessId {
            get {
                return this.processIdField;
            }
            set {
                this.processIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessIdSpecified {
            get {
                return this.processIdFieldSpecified;
            }
            set {
                this.processIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RegistryEntryProcessType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="RegistryEntry.ProcessType", Namespace="http://schemas.datacontract.org/2004/07/SharedObjects")]
    public enum RegistryEntryProcessType {
        
        /// <remarks/>
        GameManager,
        
        /// <remarks/>
        Player,
        
        /// <remarks/>
        BalloonStore,
        
        /// <remarks/>
        WaterServer,
        
        /// <remarks/>
        UmbrellaManager,
        
        /// <remarks/>
        Thief,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProcessIdCompletedEventHandler(object sender, GetProcessIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short GetProcessIdResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetProcessIdResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AmAliveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetGameManagersCompletedEventHandler(object sender, GetGameManagersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGameManagersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGameManagersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPlayersCompletedEventHandler(object sender, GetPlayersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProcessInfoCompletedEventHandler(object sender, GetProcessInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryEntry Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryEntry)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RegisterGameCompletedEventHandler(object sender, RegisterGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllGamesCompletedEventHandler(object sender, GetAllGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetGamesCompletedEventHandler(object sender, GetGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetGameInfoCompletedEventHandler(object sender, GetGameInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGameInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGameInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GameAmAliveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangeStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndPointReflectorCompletedEventHandler(object sender, EndPointReflectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndPointReflectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndPointReflectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591